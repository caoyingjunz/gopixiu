# Copyright 2021 The Pixiu Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for gopixiu
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

image:
  ## Repository for container
  repository: jacky06/gopixiu
  tag: v0.1
  pullPolicy: IfNotPresent
  pullSecrets: []

## Number of replicas
replicaCount: 1

## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
# eg: commonLabels: {"key1": "value1", "key2": "value2"}

## Here labels can be added to the gopixiu deployment
labels: {}
# eg: labels: {"key1": "value1", "key2": "value2"}

## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
# eg: commonAnnotations: {"key1": "value1", "key2": "value2"}

## Here annotations can be added to the gopixiu deployment
annotations: {}
# eg: annotations: {"key1": "value1", "key2": "value2"}

## Additional container environment variables
##
extraEnv: []
# - name: SOME_VAR
#   value: 'some value'

## Additional volumes to be added to gopixiu pods
##
extraVolumes: []
# - name: gopixiu-kubeconfig
#   secret:
#     defaultMode: 420
#     secretName: gopixiu-kubeconfig

## Additional volumeMounts to be added to gopixiu container
##
extraVolumeMounts: []
# - mountPath: /kubeconfig
#   name: gopixiu-kubeconfig
#   readOnly: true

## Array of extra K8s manifests to deploy
##
extraManifests: []
# - apiVersion: v1
#   kind: ConfigMap
#   metadata:
#     name: additional-configmap
#   data:
#     key: value

## SecurityContext to be added to gopixiu pods
## To enable set the following configuration to "":
# securityContext:
securityContext: null
#  seccompProfile:
#    type: RuntimeDefault

## SecurityContext defaults for the gopixiu container and metrics scraper container
## To enable set the following configuration to "":
# containerSecurityContext:
containerSecurityContext: null
#  allowPrivilegeEscalation: false
#  readOnlyRootFilesystem: true
#  runAsUser: 1001
#  runAsGroup: 2001

## @param podLabels Extra labels for OAuth2 Proxy pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}

## @param podAnnotations Annotations for OAuth2 Proxy pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## List of node taints to tolerate (requires Kubernetes >= 1.6)
tolerations: []
#  - key: "key"
#    operator: "Equal|Exists"
#    value: "value"
#    effect: "NoSchedule|PreferNoSchedule|NoExecute"

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Pod resource requests & limits
resources:
  requests:
    cpu: 100m
    memory: 200Mi
  limits:
    cpu: 2
    memory: 200Mi

## Serve application over HTTP without TLS
##
protocolHttp: true

service:
  #  type: NodePort
  type: ClusterIP
  # gopixiu service port
  externalPort: 8090

  ## LoadBalancerSourcesRange is a list of allowed CIDR values, which are combined with ServicePort to
  ## set allowed inbound rules on the security group assigned to the master load balancer
  # loadBalancerSourceRanges: []

  # clusterIP: ""

  ## A user-specified IP address for load balancer to use as External IP (if supported)
  # loadBalancerIP:

  ## Additional gopixiu Service annotations
  annotations: {}

  ## Here labels can be added to the gopixiu service
  labels: {}

  ## Enable or disable the kubernetes.io/cluster-service label. Should be disabled for GKE clusters >=1.15.
  ## Otherwise, the addon manager will presume ownership of the service and try to delete it.
  clusterServiceLabel:
    enabled: false
    key: "kubernetes.io/cluster-service"

ingress:
  ## If true, gopixiu Ingress will be created.
  ##
  enabled: true

  ## gopixiu Ingress labels
  # labels:
  #   key: value

  ## gopixiu Ingress annotations
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'

  ## If you plan to use TLS backend with enableInsecureLogin set to false
  ## (default), you need to uncomment the below.
  ## If you use ingress-nginx < 0.21.0
  #   nginx.ingress.kubernetes.io/secure-backends: "true"
  ## if you use ingress-nginx >= 0.21.0
  #   nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

  ## gopixiu Ingress Class
  className: "nginx"

  ## gopixiu Ingress paths
  ## Both `/` and `/*` are required to work on gce ingress.
  paths:
    - /
  #  - /*

  ## Custom gopixiu Ingress paths. Will override default paths.
  ##
  customPaths: []
  #  - pathType: ImplementationSpecific
  #    backend:
  #      service:
  #        name: ssl-redirect
  #        port:
  #          name: use-annotation
  #  - pathType: ImplementationSpecific
  #    backend:
  #      service:
  #        name: >-
  #          {{ include "kubernetes-gopixiu.fullname" . }}
  #        port:
  #          # Don't use string here, use only integer value!
  #          number: 443
  ## gopixiu Ingress hostnames
  ## Must be provided if Ingress is enabled
  ##
  hosts:
    - console.pixiu.com
  ## gopixiu Ingress TLS configuration
  ## Secrets must be manually created in the namespace
  ##
  # tls:
  #   - secretName: kubernetes-gopixiu-tls
  #     hosts:
  #       - kubernetes-gopixiu.domain.com

# gopixiu settings
settings:
  default:
    listen: 8090
    log_type: file
    log_level: INFO
    log_dir: /var/log/pixiu
    jwt_key: gopixiu
  mysql:
    host: 124.223.70.75
    user: root
    password: GoPixiu868686
    port: 3306
    name: gopixiu
  cicd:
    driver: jenkins
    host: http://8.140.165.201:9090
    user: adminops
    password: adminops@321

rbac:
  # Specifies whether namespaced RBAC resources (Role, Rolebinding) should be created
  create: true

  # Specifies whether cluster-wide RBAC resources (ClusterRole, ClusterRolebinding) to access metrics should be created
  # Independent from rbac.create parameter.
  clusterRoleMetrics: false

  # Start in ReadOnly mode.
  # Specifies whether cluster-wide RBAC resources (ClusterRole, ClusterRolebinding) with read only permissions to all resources listed inside the cluster should be created
  # Only gopixiu-related Secrets and ConfigMaps will still be available for writing.
  #
  # The basic idea of the clusterReadOnlyRole
  # is not to hide all the secrets and sensitive data but more
  # to avoid accidental changes in the cluster outside the standard CI/CD.
  #
  # It is NOT RECOMMENDED to use this version in production.
  # Instead you should review the role and remove all potentially sensitive parts such as
  # access to persistentvolumes, pods/log etc.
  #
  # Independent from rbac.create parameter.
  clusterReadOnlyRole: false
  # It is possible to add additional rules if read only role is enabled.
  # This can be useful, for example, to show CRD resources.
  # clusterReadOnlyRoleAdditionalRules: []

  # If the default role permissions are not enough, it is possible to add additional permissions.
  # roleAdditionalRules: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

livenessProbe:
  # Number of seconds to wait before sending first probe
  initialDelaySeconds: 30
  # Number of seconds to wait for probe response
  timeoutSeconds: 30