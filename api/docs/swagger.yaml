definitions:
  httputils.Response:
    properties:
      code:
        description: 返回的状态码
        type: integer
      message:
        description: 异常返回时的错误信息
        type: string
      result:
        description: 正常返回时的数据，可以为任意数据结构
    type: object
  types.KubeConfigOptions:
    properties:
      cloud_name:
        type: string
      cluster_role:
        type: string
      config:
        type: string
      expiration_timestamp:
        type: string
      id:
        type: integer
      service_account:
        type: string
    type: object
info:
  contact:
    email: support@gopixiu.io
    name: API Support
    url: https://github.com/caoyingjunz/gopixiu
  description: Use the Pixiu APIs to your cloud
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://github.com/caoyingjunz/gopixiu
  title: Pixiu API Documentation
  version: "1.0"
paths:
  /clouds/{id}:
    delete:
      consumes:
      - application/json
      description: Delete by cloud ID
      parameters:
      - description: Cloud ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Response'
      summary: Delete a cloud
      tags:
      - clouds
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Cloud ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Response'
      summary: Get a cloud
      tags:
      - clouds
  /clouds/v1/{cloud_name}/kubeconfigs:
    get:
      consumes:
      - application/json
      description: get by cloud kubeConfig ID
      parameters:
      - description: cloud name
        format: string
        in: path
        name: cloud_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/httputils.Response'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/types.KubeConfigOptions'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Response'
      summary: get a cloud custom kubeConfig
      tags:
      - kubeConfigs
    post:
      consumes:
      - application/json
      description: Create by cloud kubeConfig
      parameters:
      - description: cloud name
        format: string
        in: path
        name: cloud_name
        required: true
        type: string
      - description: service_account, cluster_role
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.KubeConfigOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/httputils.Response'
            - properties:
                result:
                  $ref: '#/definitions/types.KubeConfigOptions'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Response'
      summary: Create a cloud custom kubeConfig
      tags:
      - kubeConfigs
    put:
      consumes:
      - application/json
      description: Update by cloud kubeConfig
      parameters:
      - description: cloud name
        format: string
        in: path
        name: cloud_name
        required: true
        type: string
      - description: Cloud ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/httputils.Response'
            - properties:
                result:
                  $ref: '#/definitions/types.KubeConfigOptions'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Response'
      summary: Update a cloud custom kubeConfig
      tags:
      - kubeConfigs
  /clouds/v1/{cloud_name}/kubeconfigs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete by cloud kubeConfig ID
      parameters:
      - description: cloud name
        format: string
        in: path
        name: cloud_name
        required: true
        type: string
      - description: Cloud ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Response'
      summary: Delete a cloud custom kubeConfig
      tags:
      - kubeConfigs
    get:
      consumes:
      - application/json
      description: get by cloud kubeConfig ID
      parameters:
      - description: cloud name
        format: string
        in: path
        name: cloud_name
        required: true
        type: string
      - description: kubeConfig ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/httputils.Response'
            - properties:
                result:
                  $ref: '#/definitions/types.KubeConfigOptions'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputils.Response'
      summary: get a cloud custom kubeConfig
      tags:
      - kubeConfigs
swagger: "2.0"
