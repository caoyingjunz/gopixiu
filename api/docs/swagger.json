{
    "swagger": "2.0",
    "info": {
        "description": "Use the Pixiu APIs to your cloud",
        "title": "Pixiu API Documentation",
        "termsOfService": "https://github.com/caoyingjunz/gopixiu",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/caoyingjunz/gopixiu",
            "email": "support@gopixiu.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/clouds/build": {
            "post": {
                "description": "自建 kubernetes 集群",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clouds"
                ],
                "summary": "自建 kubernetes 集群",
                "parameters": [
                    {
                        "description": "build a cloud",
                        "name": "buildCloud",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BuildCloud"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/clouds/ping": {
            "post": {
                "description": "通过 kubeConfig 检测与 kubernetes 集群的连通性",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clouds"
                ],
                "summary": "Ping a cloud",
                "parameters": [
                    {
                        "type": "file",
                        "description": "kubernetes kubeconfig",
                        "name": "kubeconfig",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        },
        "/clouds/v1/{cloud_name}/kubeconfigs": {
            "get": {
                "description": "get by cloud kubeConfig ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "get a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.KubeConfigOptions"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update by cloud kubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "Update a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Cloud ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.KubeConfigOptions"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create by cloud kubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "Create a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "service_account, cluster_role",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.KubeConfigOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.KubeConfigOptions"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            }
        },
        "/clouds/v1/{cloud_name}/kubeconfigs/{id}": {
            "get": {
                "description": "get by cloud kubeConfig ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "get a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "kubeConfig ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httputils.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/types.KubeConfigOptions"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete by cloud kubeConfig ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubeConfigs"
                ],
                "summary": "Delete a cloud custom kubeConfig",
                "parameters": [
                    {
                        "type": "string",
                        "format": "string",
                        "description": "cloud name",
                        "name": "cloud_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Cloud ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.Response"
                        }
                    }
                }
            }
        },
        "/clouds/{id}": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clouds"
                ],
                "summary": "Get a cloud",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Cloud ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete by cloud ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clouds"
                ],
                "summary": "Delete a cloud",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Cloud ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpOK"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputils.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputils.HttpError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "httputils.HttpOK": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "result": {
                    "type": "string",
                    "example": "any result"
                }
            }
        },
        "httputils.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "返回的状态码",
                    "type": "integer"
                },
                "message": {
                    "description": "异常返回时的错误信息",
                    "type": "string"
                },
                "result": {
                    "description": "正常返回时的数据，可以为任意数据结构"
                }
            }
        },
        "types.BuildCloud": {
            "type": "object",
            "properties": {
                "alias_name": {
                    "description": "可读性的名称，支持中午",
                    "type": "string"
                },
                "cloud_type": {
                    "description": "cloud 的类型，支持标准类型和自建类型",
                    "type": "string"
                },
                "create_namespace": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "immediate": {
                    "description": "立刻部署",
                    "type": "boolean"
                },
                "kubernetes": {
                    "description": "k8s 全部信息",
                    "$ref": "#/definitions/types.KubernetesSpec"
                },
                "name": {
                    "description": "名称，系统自动生成，只能为字符串",
                    "type": "string"
                },
                "region": {
                    "description": "城市区域",
                    "type": "string"
                }
            }
        },
        "types.KubeConfigOptions": {
            "type": "object",
            "properties": {
                "cloud_name": {
                    "type": "string"
                },
                "cluster_role": {
                    "type": "string"
                },
                "config": {
                    "type": "string"
                },
                "expiration_timestamp": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "service_account": {
                    "type": "string"
                }
            }
        },
        "types.KubernetesSpec": {
            "type": "object",
            "properties": {
                "api_server": {
                    "description": "kubernetes 的 apiServer 的 ip 地址",
                    "type": "string"
                },
                "cni": {
                    "description": "网络 cni，支持 flannel 和 calico",
                    "type": "string"
                },
                "masters": {
                    "description": "集群的 master 节点",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.NodeSpec"
                    }
                },
                "nodes": {
                    "description": "集群的 node 节点",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.NodeSpec"
                    }
                },
                "pod_cider": {
                    "type": "string"
                },
                "proxy_mode": {
                    "description": "kubeProxy 的模式，只能是 iptables 和 ipvs",
                    "type": "string"
                },
                "runtime": {
                    "description": "容器运行时，目前支持 docker 和 containerd",
                    "type": "string"
                },
                "service_cidr": {
                    "type": "string"
                },
                "version": {
                    "description": "k8s 的版本",
                    "type": "string"
                }
            }
        },
        "types.NodeSpec": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        }
    }
}